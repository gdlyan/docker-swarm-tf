# Init swarm cluster
- name: Init Swarm Master
  hosts: managers
  become: true
  gather_facts: False
  tasks:
    - name: Wait for docker installation completed
      command: docker info
      register: docker_info
      until: docker_info is success
      delay: 5
      retries: 12
    - name: Restart Docker Daemon
      command: systemctl restart docker 
    - name: Swarm Init 
      command: docker swarm init --advertise-addr {{ private_ip }}
    - name: Get Worker Token
      command: docker swarm join-token worker -q
      register: worker_token
    - name: Show Worker Token
      debug: var=worker_token.stdout
    - name: Manager Token
      command: docker swarm join-token manager -q
      register: manager_token
    - name: Show Manager Token
      debug: var=manager_token.stdout
- name: Join Swarm Cluster
  hosts: workers
  become: true
  gather_facts: False
  vars:
    token: "{{ hostvars[groups['managers'][0]]['worker_token']['stdout'] }}"
    manager: "{{ hostvars[groups['managers'][0]]['private_ip'] }}"
  tasks:
    - name: Wait for docker installation completed
      command: docker info
      register: docker_info    
      until: docker_info is success
      delay: 5
      retries: 12
    - name: Join Swarm Cluster as a Worker
      command: sudo docker swarm join --token {{ token }} {{ manager }}:2377
      register: worker
    - name: Show Results
      debug: var=worker.stdout
    - name: Show Errors
      debug: var=worker.stderr

# Deploy app on swarm        
- name: Launch Docker Stack
  hosts: managers
  become: true
  gather_facts: False
  tasks:
    - name: Copy app files
      copy: 
        src: /root/app/
        dest: app
    - name: Create registry service
      command: docker service create --name registry --publish published=5000,target=5000 registry:2
    - name: Wait for docker installation completed
      uri:
        url: http://127.0.0.1:5000/v2/
      register: _result
      until: _result.status == 200
      delay: 5
      retries: 12
    - name: Build from docker-compose.yml
      command: docker-compose -f app/docker-compose.yml build
    - name: Push app image to registry
      command: docker-compose -f app/docker-compose.yml push
    - name: Create stack
      command: docker stack deploy --compose-file app/docker-compose.yml app_swarm  
              

